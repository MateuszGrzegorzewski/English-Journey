@host = https://localhost
@port = 7222
@token = CfDJ8Mc1gB6HmiNFseLzFaTpiMbYqVFT_HgCoPApnY5WOF5jWMjyqrAxom_pp54j04hJ1Dr4G4ClJemqu3kZVVAMcaptlBdt_p4nGOlxfaSWkXz2TcOGQCgPN1djw-AKjaoJkuPnNeBfFGqMo5FJGDRGbRtIbvE6mcBHh5F2xJ--YT3GoucSKyVu-RzBVInLO037eoKflkPGsSqdVsmUGrntDVnQadc9ualbd_IOHQ9EYCkka6CtiMQ1WuIuUtpZB64AelYbo6JLAbRBfBTwkuYgUzGxJ5zBEriv1QJyoQci3de9h001wnA0K_naTHZeTSQhw5-Jvj-fKAoBFriEnsqN6GLdW3H6Xijd1BDdnxomsTh5IbNLGQj8whWkk7O_traJ_j5nfQlL1I3moomWbDGuLeq3wywXTMJlnUfifxu7TtosjYj9-J6lwvevAeLtkIo5O2sCqNEgS2SBM5NcLf48ZiC9UPUFq3-7Bt_vuDFWSk2_yQOqp4ORzVH3Bnk0PYISGwRCvh1xo-3FZE411gjilZUH4_bCnhahvJu81kyfh5YAsffa2Fsgt3qoA410do3x_ClQhOogZJLPlysnh614C-S-gPHqhFEvCcS80CJ6fvIeDuxFRH5ITbPylreiZJKHKuHd8udwCG9C41xMpQT4NSY8Onn2WA1nfUWAuUP3NrDkUMpv-ov6uBBm6qTOYpWYz9udE-xxrQjjZZqaKXdPw4ZiAFZcFZvBlS84x0kvEhO3MQpIO55mfUC5BEJ7Wk4cp91H9EG4TsYuWicK_I56xvKnkh4kjEYOBH-eGP0KWdVD

@EnglishJourney.API_HostAddress = https://localhost:7222


###

# CONNECTIONS functionality

###

GET {{EnglishJourney.API_HostAddress}}/api/connections/1
Authorization: Bearer {{token}}

###

GET {{EnglishJourney.API_HostAddress}}/api/connections
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/connections/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "topic": "Daily Edited"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/connections/2
Authorization: Bearer {{token}}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/connections/attributes/2
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/connections
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "topic": "User topic"
}

###

POST {{EnglishJourney.API_HostAddress}}/api/connections/1/attributes
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "word": "whims",
  "definition": "kaprysy"
}

###

# NOTES functionality

###

GET {{EnglishJourney.API_HostAddress}}/api/notes
Authorization: Bearer {{token}}

###

GET {{EnglishJourney.API_HostAddress}}/api/notes/archived
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/notes/2/archive
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/notes/1/dearchive
Authorization: Bearer {{token}}

###


PATCH {{EnglishJourney.API_HostAddress}}/api/notes/2
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "title": "Updated title",
  "description": "Updated note"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/notes/2
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/notes
Authorization: Bearer {{token}}
Content-Type: application/json

{
   "title": "Created title",
   "description": "Description"
}

###

# FLASHCARDS functionality

###

GET {{EnglishJourney.API_HostAddress}}/api/flashcards/category
Authorization: Bearer {{token}}

###

GET {{EnglishJourney.API_HostAddress}}/api/flashcards/category/2
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/flashcards/category/2
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Updated category"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/flashcards/category/3
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/flashcards/category
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Created category"
}

###

GET {{EnglishJourney.API_HostAddress}}/api/flashcards/box/2
Authorization: Bearer {{token}}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/flashcards/1
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/flashcards/box/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "phrase": "Created word",
  "definition": "Created definition"
}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/flashcards/box/1/test
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "1": true,
  "2": false,
  "3": true,
  "4": false
}

###

# USERS

###

POST {{EnglishJourney.API_HostAddress}}/api/identity/register
Content-Type: application/json

{
  "email": "user@test.com",
  "password" : "Password1!"
}

###

POST {{EnglishJourney.API_HostAddress}}/api/identity/login
Content-Type: application/json

{
  "email": "admin@test.com",
  "password" : "Password1!"
}

###

POST {{EnglishJourney.API_HostAddress}}/api/identity/userRole
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userEmail": "test@test.com",
  "roleName": "USER"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/identity/userRole
Authorization: Bearer {{token}}
Content-Type: application/json


{
  "userEmail": "test@test.com",
  "roleName": "USER"
}

###

# USER STATISTICS

###

GET {{EnglishJourney.API_HostAddress}}/api/statistics/users
Authorization: Bearer {{token}}

###

GET {{EnglishJourney.API_HostAddress}}/api/statistics/demography
Authorization: Bearer {{token}}

###