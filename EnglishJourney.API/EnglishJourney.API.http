@host = https://localhost
@port = 7222
@token = CfDJ8Mc1gB6HmiNFseLzFaTpiMZ5ilQyunUgfJBmuLzyOgZPE26dWUUt1kNV-olQYLwZtCk4FNz09vQ9Pu8KKTTpMipBrejUS2gmoRFbP4C16n5eVZyOgw-CuE13V8hV03F7Y1Z09Z9jSiks_I6OtxS9eoJzSsyYQTzSt6zu9dKk_2Tk0p0wPg6-nL4do5F6czOeeF-B9zufxVlYTqoBbwwIp8yhZxhq7bbzDTqpjtA7oyyhLF_uDWbdUMeZ6IqP4pP_-aZEsm7xicZKN94xPqbjN-WBvK3WDRvx9arqBzXrTWOy90TtRwmpMk0oS2gWk5MK9FWiSKiSO6UEHzfPtNAXfuk-hD60IZBzO5nk2Orc62OAxuHw2Zb0wBSF177aPpWB8zcEDN56qV-pArIbYSz0M4KZ4EVSvoVLbF_wZfZwgoGPlnXegv4ZqgTCpva-l8pPRewSj7shbzk92N8Q1J1edyqexvWYSrGJaOGn66g3JoJ7KoH0vQSpp3qALoatzzJgleXAPDH_QzMkF_C16w6pi3Kmqy928JCiNEkpOBtZIEeYqV0TF9pTzpdmHZYGc4c0JMo0vFpYWRie2CrNEVpjM4T0gFUn1BUL7mxGOOvTF8x6QZa8h5jaM4_qFWt4nirw9KKKdoXeNxM7o2rLQwCFDZ1vxGrXiNCDIHm6lob9-lY-AxAAlG0IKfnyMLf1Ke3TFbCevBF3m1xPnjB5dRtXhL7JuliKtStk4-1Q1abSoZLnzAH5xLbkN85od7rLTN43hoFJnIa6Uk4ar2MqUiA3MFappE5mhvDyYnwQTSDbVw1H

@EnglishJourney.API_HostAddress = https://localhost:7222


###

# CONNECTIONS functionality

###

GET {{EnglishJourney.API_HostAddress}}/api/connections/1
Authorization: Bearer {{token}}

###

GET {{EnglishJourney.API_HostAddress}}/api/connections
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/connections/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "topic": "Daily Edited"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/connections/2
Authorization: Bearer {{token}}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/connections/attributes/2
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/connections
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "topic": "User topic"
}

###

POST {{EnglishJourney.API_HostAddress}}/api/connections/1/attributes
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "word": "whims",
  "definition": "kaprysy"
}

###

# NOTES functionality

###

GET {{EnglishJourney.API_HostAddress}}/api/notes
Authorization: Bearer {{token}}

###

GET {{EnglishJourney.API_HostAddress}}/api/notes/archived
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/notes/2/archive
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/notes/1/dearchive
Authorization: Bearer {{token}}

###


PATCH {{EnglishJourney.API_HostAddress}}/api/notes/2
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "title": "Updated title",
  "description": "Updated note"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/notes/2
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/notes
Authorization: Bearer {{token}}
Content-Type: application/json

{
   "title": "Created title",
   "description": "Description"
}

###

# FLASHCARDS functionality

###

GET {{EnglishJourney.API_HostAddress}}/api/flashcards/category
Authorization: Bearer {{token}}

###

GET {{EnglishJourney.API_HostAddress}}/api/flashcards/category/2
Authorization: Bearer {{token}}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/flashcards/category/2
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Updated category"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/flashcards/category/3
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/flashcards/category
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Created category"
}

###

GET {{EnglishJourney.API_HostAddress}}/api/flashcards/box/2
Authorization: Bearer {{token}}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/flashcards/1
Authorization: Bearer {{token}}

###

POST {{EnglishJourney.API_HostAddress}}/api/flashcards/box/1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "phrase": "Created word",
  "definition": "Created definition"
}

###

PATCH {{EnglishJourney.API_HostAddress}}/api/flashcards/box/1/test
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "1": true,
  "2": false,
  "3": true,
  "4": false
}

###

# USERS

###

POST {{EnglishJourney.API_HostAddress}}/api/identity/register
Content-Type: application/json

{
  "email": "user@test.com",
  "password" : "Password1!"
}

###

POST {{EnglishJourney.API_HostAddress}}/api/identity/login
Content-Type: application/json

{
  "email": "user@test.com",
  "password" : "Password1!"
}

###

POST {{EnglishJourney.API_HostAddress}}/api/identity/userRole
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "userEmail": "test@test.com",
  "roleName": "USER"
}

###

DELETE {{EnglishJourney.API_HostAddress}}/api/identity/userRole
Authorization: Bearer {{token}}
Content-Type: application/json


{
  "userEmail": "test@test.com",
  "roleName": "USER"
}

###